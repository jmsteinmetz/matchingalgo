{
  "_args": [
    [
      {
        "raw": "fuzzy-match",
        "scope": null,
        "escapedName": "fuzzy-match",
        "name": "fuzzy-match",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/johnsteinmetz/Box Sync/Development/prototypes/matching"
    ]
  ],
  "_from": "fuzzy-match@latest",
  "_id": "fuzzy-match@0.1.0",
  "_inCache": true,
  "_location": "/fuzzy-match",
  "_npmUser": {
    "name": "mirkok",
    "email": "mail@mirkokiefer.com"
  },
  "_npmVersion": "1.1.62",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fuzzy-match",
    "scope": null,
    "escapedName": "fuzzy-match",
    "name": "fuzzy-match",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/fuzzy-match/-/fuzzy-match-0.1.0.tgz",
  "_shasum": "0329b00dd380bc9f57d6cb1f807a1f4e78025937",
  "_shrinkwrap": null,
  "_spec": "fuzzy-match",
  "_where": "/Users/johnsteinmetz/Box Sync/Development/prototypes/matching",
  "author": {
    "name": "Mirko Kiefer",
    "email": "mail@mirkokiefer.com"
  },
  "dependencies": {
    "array-diff": "0.0.1",
    "underscore": "~1.4.3"
  },
  "description": "fuzzy matching of IDs in arrays",
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0329b00dd380bc9f57d6cb1f807a1f4e78025937",
    "tarball": "https://registry.npmjs.org/fuzzy-match/-/fuzzy-match-0.1.0.tgz"
  },
  "license": "BSD",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mirkok",
      "email": "mail@mirkokiefer.com"
    }
  ],
  "name": "fuzzy-match",
  "optionalDependencies": {},
  "readme": "#fuzzy-id\nMatch edited strings (or other values) by similarity.\n\nThe goal is to be able to do 3-way merges considering sentence/word movements in text.  \nAfter having matched the strings the output can be used to do these merges with [id-diff](https://github.com/mirkok/id-diff) and [id-merge](https://github.com/mirkok/id-merge).  \n\n``` js\nvar before = [\n  {id: 1, value: 'Hello world'},\n  {id: 2, value: 'Node.js is really awesome'},\n  {id: 3, value: 'fuzzy-id allows you to match arrays by similarity'},\n  {id: 4, value: 'And finally a last sentence'}\n]\n\n// we lost all IDs and strings were moved around:\nvar after = [\n  'Hello world',\n  'fuzzy-id allows you to match arrays by similarity - how great!',\n  'Node.js is awesome',\n  'This one should not match',\n  'And finally a last sentence',\n]\n\n// required function to decompose values into arrays for comparison:\nvar decompose = function(value) {\n  return value.split(' ')\n}\n\nvar result = match(origin, modified, {decompose: decompose})\n// returns:\n[\n  {id: 1, value: 'Hello world'},\n  {id: 3, value: 'fuzzy-id allows you to match arrays by similarity - how great!'},\n  {id: 2, value: 'Node.js is awesome'},\n  {id: undefined, value: 'This one should not match'},\n  {id: 4, value: 'And finally a last sentence'}\n]\n``",
  "repository": "",
  "scripts": {
    "test": "node_modules/.bin/mocha test.js"
  },
  "version": "0.1.0"
}
